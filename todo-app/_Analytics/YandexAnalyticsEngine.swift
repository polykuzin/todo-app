//
//  YandexAnalyticsEngine.swift
//  
//
//  Created by polykuzin on 09/09/2022.
//

import CoreAnalytics
import YandexMobileMetrica

final class YandexAnalyticsEngine {
    
    /// Regular init
    public init() {
        configure()
    }
    
    /// –î–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∏ –±–µ–∑
    /// - Parameters:
    ///   - name: –∏–º—è —Å–æ–±—ã—Ç–∏—è –≤ —Ñ–æ—Ç–º–∞—Ç–µ "\(–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ).\(–º–æ–¥—É–ª—å).\(—Å–æ–±—ã—Ç–∏–µ)"
    ///   - metadata: (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: ["version": "4.0.0"]
    public func reportEvent(name: String, metadata: [String: AnyHashable]? = nil) {
        YMMYandexMetrica.reportEvent(name, parameters: metadata) { error in
            print("üíîüíîüíî Event with name \(name) not sent")
            print("REPORT ERROR: \(error.localizedDescription)")
        }
    }
    
    /// –î–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∏ –±–µ–∑
    /// - Parameters:
    ///   - id: id –æ—à–∏–±–∫–∏ (TBD)
    ///   - message: —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ –∏ –∫–æ–≥–¥–∞
    ///   - metadata: (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: ["version": "4.0.0"]
    public func reportError(id: String, message: String, metadata: [String: AnyHashable]? = nil) {
        YMMYandexMetrica.report(error: YMMError(identifier: id, message: message, parameters: metadata)) { error in
            print("üíîüíîüíî Error with id \(id) not sent")
            print("REPORT ERROR: \(error.localizedDescription)")
        }
    }
    
    /// –î–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–≤–µ—Ä—à—ë–Ω–Ω–æ–º –ø–ª–∞—Ç–µ–∂–µ
    /// - Parameters:
    ///   - id: id —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –∫—É–ø–∏–ª–∏ - –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –±–∏–ª–µ—Ç–æ–≤?
    ///   - price: —Ç–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞
    ///   - currency: —Ç–µ–∫—É—â–∞—è –≤–∞–ª—é—Ç–∞ (–¥–∞, –æ–±—ã—á–Ω–æ —Ä—É–±–ª–∏)
    ///   - quantity: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É–ø–ª–µ–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
    public func reportRevenue(id: String, price: String, currency: String = "RUB", quantity: Int = 1) {
        let price = NSDecimalNumber(string: price)
        // Initializing the Revenue instance.
        let revenueInfo = YMMMutableRevenueInfo.init(priceDecimal: price, currency: currency)
        revenueInfo.quantity = 1
        revenueInfo.productID = id
        // Set purchase information for validation.
        YMMYandexMetrica.reportRevenue(revenueInfo, onFailure: { (error) in
            print("REPORT ERROR: \(error.localizedDescription)")
        })
    }
    
    public func reportECommerce(event: ECommerceEvent) {
        switch event {
        case .purchaseEventWithOrder(let order):
            reportPurchaseEvent(with: order)
        case .addCartItemEventWithItem(let cartItem):
            reportAddToCartEvent(with: cartItem)
        case .showScreenEventWithScreen(let screen):
            reportShowScreenEvent(with: screen)
        case .removeCartItemEventWithItem(let cartItem):
            reportRemoveFromCartEvent(with: cartItem)
        case .beginCheckoutEventWithOrder(let order):
            reportBeginCheckoutEvent(with: order)
        case .showProductCardEventWithProduct(let product, let screen):
            reportShowProductCardEvent(with: product, on: screen)
        case .showProductDetailsEventWithProduct(let product, let referrer):
            reportShowProductDetailsEvent(with: product, referrer: referrer)
        }
    }
}

extension YandexAnalyticsEngine : _AnalyticsEngine {
    
    private var apiKey : String? {
        guard
            let apiKey = Bundle.main.object(forInfoDictionaryKey: "YANDEX_API_KEY") as? String
        else { return nil }
        return apiKey
    }
    
    private func configure() {
        let bundle = Bundle.main
        guard
            let apiKey = apiKey,
            let appVersion = bundle.infoDictionary?["CFBundleShortVersionString"] as? String,
            let yandexMetricsConfiguration = YMMYandexMetricaConfiguration.init(apiKey: apiKey)
        else { fatalError("ü§¨ü§¨ü§¨ No Api Key Found") }
#if !prod
        /// –í–∫–ª—é—á–∞–µ—Ç/–æ—Ç–∫–ª—é—á–∞–µ—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–∏–±–ª–∏–æ—Ç–µ–∫–∏.
        yandexMetricsConfiguration.logs = true
#endif
        yandexMetricsConfiguration.appVersion = appVersion
        yandexMetricsConfiguration.crashReporting = true
        
        /// –í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–±–æ—Ä –∏ –æ—Ç–ø—Ä–∞–≤–∫—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ deeplink.
        yandexMetricsConfiguration.appOpenTrackingEnabled = true
        
        /// –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é AppMetrica –∫–∞–∫ –Ω–∞—á–∞–ª–æ —Å–µ—Å—Å–∏–∏.
        /// 'true' ‚Äî –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∫–∞–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ.
        /// 'false' ‚Äî –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∫–∞–∫ –Ω–æ–≤–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞.
        yandexMetricsConfiguration.handleFirstActivationAsUpdate = false
        
        /// –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é AppMetrica –∫–∞–∫ –Ω–∞—á–∞–ª–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å–µ—Å—Å–∏–∏.
        /// 'true' - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Å–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–µ—Ç—Å—è –≤ –º–æ–º–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
        /// 'false' - –≤ –º–æ–º–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —Å–æ–∑–¥–∞–µ—Ç—Å—è —Ñ–æ–Ω–æ–≤–∞—è —Å–µ—Å—Å–∏—è, –∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Å–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è UIApplicationDidBecomeActiveNotification.
        yandexMetricsConfiguration.handleActivationAsSessionStart = false
        
        YMMYandexMetrica.activate(with: yandexMetricsConfiguration)
    }
    
    private func reportPurchaseEvent(with order: _ECommerceOrder) {
        let yOrder = order.mapToYandex()
        YMMYandexMetrica.report(eCommerce: .purchaseEvent(order: yOrder))
    }
    
    private func reportAddToCartEvent(with cartItem: _ECommerceCartItem) {
        let yCartItem = cartItem.mapToYandex()
        YMMYandexMetrica.report(eCommerce: .addCartItemEvent(cartItem: yCartItem))
    }
    
    private func reportShowScreenEvent(with screen: _ECommerceScreen) {
        let yScreen = screen.mapToYandex()
        YMMYandexMetrica.report(eCommerce: .showScreenEvent(screen: yScreen))
    }
    
    private func reportRemoveFromCartEvent(with cartItem: _ECommerceCartItem) {
        let yCartItem = cartItem.mapToYandex()
        YMMYandexMetrica.report(eCommerce: .removeCartItemEvent(cartItem: yCartItem))
    }
    
    private func reportBeginCheckoutEvent(with order: _ECommerceOrder) {
        let yOrder = order.mapToYandex()
        YMMYandexMetrica.report(eCommerce: .beginCheckoutEvent(order: yOrder))
    }
    
    private func reportShowProductCardEvent(with product: _ECommerceProduct, on screen: _ECommerceScreen) {
        let yScreen = screen.mapToYandex()
        let yProduct = product.mapToYandex()
        YMMYandexMetrica.report(eCommerce: .showProductCardEvent(product: yProduct, screen: yScreen))
    }
    
    private func reportShowProductDetailsEvent(with product: _ECommerceProduct, referrer: _ECommerceReferrer) {
        let yProduct = product.mapToYandex()
        let yReferrer = referrer.mapToYandex()
        YMMYandexMetrica.report(eCommerce: .showProductDetailsEvent(product: yProduct, referrer: yReferrer))
    }
}
